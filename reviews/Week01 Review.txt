Week01 Review:
	Topics:
		Core javaScript
		
		Asynchronious Programming:
				Promises
				Async & Await

		AI Tools:
			Perplexity
			Tabnine


Compiled Programming Languages:
    Java, C#, TypeScript etc

    Variables:
        int num;

        num = "Water"


Interpreted Programming languages:
    Python, JavaScript etc.

    Variables:
        let num;

        num = 100;

        num = "food";

        num = true;


Promise: Future Value/Error (50/50)
    Represents the value that will be available either now, or in the future, or never


Task01:
    Make a promise to return the value
    Step1
    Step2
    Step3
    Step4
    Step5: Return a promise

Task02:
    Step1
    Step2
    Step3 (Need the value of task01 is retirning) ==> await for the promised value
    Step4

Task03:
    Step1
    Step2
    Step3
    Step4 (Need the value of task01 is retirning) ==> await for the promised value

Task04:
    Step1
    Step2 (Need the value of task01 is retirning) ==> await for the promised value
    Step3
    Step4

----------------------------------

 Word Break Problem
Given an input string and a dictionary of words, find out if the input string can be segmented
into a space-separated sequence of dictionary words. See following examples for more details.
Consider the following dictionary
	{ i, like, sam, sung, samsung, mobile, ice, cream, icecream, man, go, mango}
	Input:  ilike
	Output: Yes
	The string can be segmented as "i like".

	Input:  ilikesamsung
	Output: Yes
	The string can be segmented as "i like samsung" or "i like sam sung".


Create a function that can Count of substrings having all distinct characters
        Given a string str consisting of lowercase alphabets, the task is to find the number of possible substrings 
        (not necessarily distinct) that consists of distinct characters only.
            Examples:
                Input: Str = “gffg”
                Output: 6
        Explanation:
            All possible substrings from the given string are,
            ( “g“, “gf“, “gff”, “gffg”, “f“, “ff”, “ffg”, “f“, “fg“, “g” )
            Among them, the highlighted ones ( “g“, “gf“, “f“, “f“, “fg“, “g” ) consists of distinct characters only.

                Input: str = “gfg”
                Output: 5
        Explanation:
            All possible substrings from the given string are,
            ( “g“, “gf“, “gfg”, “f“, “fg“, “g” )
            Among them, the highlighted ( “g“, “gf“, “f“, “fg“, “g” ) consists of distinct characters only.


==============================

